---
title: "Propensity Score Diagnostics"
format: html
---


```{r}
#| label: setup
library(tidyverse)
library(broom)
library(touringplans)
library(halfmoon)
library(propensity)
```

We are interested in examining the relationship between whether there were "Extra Magic Hours" in the morning (the **exposure**) and the average wait time for the Seven Dwarfs Mine Train the same day between 9am and 10am (the **outcome**).

Below is the propensity score model and weights you created in the previous exercise.

```{r}
seven_dwarfs <- seven_dwarfs_train_2018 |>
  filter(wait_hour == 9)

propensity_model <- glm(
  park_extra_magic_morning ~ park_ticket_season + park_close + park_temperature_high,
  data = seven_dwarfs,
  family = binomial()
)

seven_dwarfs_ps <- propensity_model |>
  augment(type.predict = "response", data = seven_dwarfs) |>
  mutate(w_ate = wt_ate(.fitted, park_extra_magic_morning))
```

## Your Turn 1

*After updating the code chunks below, change `eval: true` before rendering*

Calculate the standardized mean differences with and without weights

```{r}
#| eval: false
smds <- seven_dwarfs_ps |>
  mutate(park_close = as.numeric(park_close)) |>
  tidy_smd(
  .vars = ____,
  .group = ____,
  .wts = ____
)
```

Create the Love Plot using ggplot and halfmoon

```{r}
#| eval: false
ggplot(
  data = ____,
  aes(x = abs(____), y = ____, group = ____, color = ____)
) +
  geom_love()
```

## Your Turn 2

Create an unweighted ECDF for `park_temperature_high` by whether or not the day had Extra Magic Hours.

```{r}
#| eval: false
ggplot(seven_dwarfs_ps, aes(x = ____, group = ____, color = factor(____))) +
  ____() +
  scale_color_manual(
    "Extra Magic Hours", 
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) + 
  xlab(____) + 
  ylab("Proportion <= x") 
```

Create an weighted ECDF for `park_temperature_high` by whether or not the day had Extra Magic Hours.

```{r}
#| eval: false
ggplot(seven_dwarfs_ps, aes(x = ____, color = factor(____))) +
  ____(aes(weights = ____)) + 
  scale_color_manual(
    "Extra Magic Hours",
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) +
  xlab(____) +
  ylab("Proportion <= x (Weighted)")
```

